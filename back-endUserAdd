# CSS and OpenDCIM header code can be built around this for uniformity...worked nicely for me.
...
<h1>New OpenDCIM User</h1>
//
// A VERY simple PHP form that takes new user input from web page an creates back-end IDs using htpasswd. Once the backend 
// user data is inplace, the OpenDCIM UI can be used to grant proper permissions on the 'usermgr.php' page. I added links
// to this and my user remove script on the 'usermgr.php' as well.
//
<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>" method="post">
//
// Note: You'll see there isn't a lot of input sanitation going on here. I was trying to keep it clean, so use with care.
//
Enter New Username: <input type="text" name="nuser"><br>
Enter New Password: <input type="text" name="npass"><br><br>
<input type="submit" name="submit" value="Create"><br>
</form>

<?php
        $t=$_POST["nuser"];
        $y=$_POST["npass"];
        putenv("NUSER=$t");
        putenv("NPASS=$y");
//
// I had some trouble variablizing the environment variables directly from _POST. Rather than waste time troubleshooting whatever
// syntax I was mangling I merely dumped them in a place holder var (t/y) that I could call cleanly.
//
        $output = exec('/bin/htpasswd -b .htpasswd $NUSER $NPASS; grep $NUSER .htpasswd');
        echo "<br>Confirm your entry here: ",$output;
        $output = "";     
?>
<br><br>
//
// Button returns you to previous user UI page. 
//
<a href="https://opendcim-server.local/usermgr.php"><button>Return to User Page</button></a>
</div></div>
